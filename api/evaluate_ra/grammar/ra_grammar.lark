start: expr

?expr: term ( (JOIN ("{" COND "}")? term) | (PRODUCT term) | (UNION term) | (DIFF term) | (INTERSECT term) | (DIV term) )*

?term: projection | selection | rename | relation | "(" expr ")"

projection: (PI) "{" attr_list "}" "(" expr ")"   -> projection
selection:  (SIGMA) "{" COND "}" "(" expr ")"     -> selection
rename:     (RHO) "{" rename_list "}" "(" expr ")"-> rename

relation: NAME                                     -> relation

attr_list: NAME ("," NAME)*
rename_list: rename_pair ("," rename_pair)*
rename_pair: NAME "->" NAME

// Define tokens with explicit priority
PI.2: "π" | /(?i)pi/
SIGMA.2: "σ" | /(?i)sigma/
RHO.2: "ρ" | /(?i)rho/
JOIN.2: "⋈" | /(?i)join/
PRODUCT.2: "×" | /(?i)x/ | /(?i)cross/
UNION.2: "∪" | /(?i)union/
DIFF.2: "−" | "-" | /(?i)diff/
INTERSECT.2: "∩" | /(?i)intersect/
DIV.2: "÷" | "/" | /(?i)div/
NAME: /[A-Za-z_][A-Za-z0-9_\.]*/

COND: /[^}]+/

%import common.WS
%ignore WS
