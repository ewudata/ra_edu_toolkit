start: expr

?expr: term ( (JOIN ("{" COND "}")? term) | (PRODUCT term) | (UNION term) | (DIFF term) | (INTERSECT term) | (DIV term) )*

?term: projection | selection | rename | relation | "(" expr ")"

projection: (PI) "{" attr_list "}" "(" expr ")"   -> projection
selection:  (SIGMA) "{" COND "}" "(" expr ")"     -> selection
rename:     (RHO) "{" rename_list "}" "(" expr ")"-> rename

relation: NAME                                     -> relation

attr_list: NAME ("," NAME)*
rename_list: rename_pair ("," rename_pair)*
rename_pair: NAME "->" NAME

// Define tokens with explicit priority
PI.2: "π" | "pi" | "PI"
SIGMA.2: "σ" | "sigma" | "SIGMA"
RHO.2: "ρ" | "rho" | "RHO"
JOIN.2: "⋈" | "join" | "JOIN"
PRODUCT.2: "×" | "x" | "X" | "cross" | "CROSS"
UNION.2: "∪" | "union" | "UNION"
DIFF.2: "−" | "-" | "diff" | "DIFF"
INTERSECT.2: "∩" | "intersect" | "INTERSECT"
DIV.2: "÷" | "/" | "div" | "DIV"
NAME: /[A-Za-z_][A-Za-z0-9_\.]*/

COND: /[^}]+/

%import common.WS
%ignore WS
