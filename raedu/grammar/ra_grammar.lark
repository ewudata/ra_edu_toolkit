start: expr

?expr: term ( (JOIN ("{" COND "}")? term) | (PRODUCT term) | (UNION term) | (DIFF term) )*

?term: projection | selection | rename | relation | "(" expr ")"

projection: (PI) "{" attr_list "}" "(" expr ")"   -> projection
selection:  (SIGMA) "{" COND "}" "(" expr ")"     -> selection
rename:     (RHO) "{" rename_list "}" "(" expr ")"-> rename

relation: NAME                                     -> relation

attr_list: NAME ("," NAME)*
rename_list: NAME "->" NAME ("," NAME "->" NAME)*

// Define tokens with explicit priority
PI.2: "π" | "pi"
SIGMA.2: "σ" | "sigma"
RHO.2: "ρ" | "rho"
JOIN.2: "⋈" | "JOIN"
PRODUCT.2: "×" | "X" | "CROSS"
UNION.2: "∪" | "UNION"
DIFF.2: "−" | "-" | "DIFF"
NAME: /[A-Za-z_][A-Za-z0-9_\.]*/

COND: /[^}]+/

%import common.WS
%ignore WS
